%!PS-Adobe-3.0
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%DocumentMedia: plain 217 109 0 () ()
%%BoundingBox: 0 0 217 109
%%Pages: 1
%%EndComments
%%BeginDefaults
%%PageMedia: plain
%%EndDefaults
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2004 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
/F8_0 /Times-Roman 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
217 109 false pdfSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageOrientation: Portrait
pdfStartPage
0 0 217 109 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
8.316 w
1 J
1 i
/DeviceGray {} CS
[0] SC
0 4.5664 m
540 544.566 l
S
/DeviceGray {} cs
[0] sc
287.637 292.203 m
219.547 263.305 l
230.758 268.062 243.742 265.539 252.355 256.926 c
260.969 248.312 263.492 235.328 258.734 224.117 c
f
540 544.566 m
0 1084.57 l
S
252.359 832.203 m
281.262 764.117 l
276.504 775.328 279.027 788.312 287.641 796.926 c
296.254 805.539 309.238 808.062 320.449 803.305 c
f
1620 544.566 m
2160 1084.57 l
S
1907.64 832.203 m
1839.55 803.305 l
1850.76 808.062 1863.75 805.539 1872.36 796.926 c
1880.97 788.312 1883.5 775.328 1878.74 764.117 c
f
2160 4.5664 m
1620 544.566 l
S
1872.36 292.203 m
1901.26 224.117 l
1896.5 235.328 1899.02 248.312 1907.64 256.926 c
1916.25 265.539 1929.23 268.062 1940.45 263.305 c
f
7.56 w
540 544.566 m
542.879 573.355 565.938 595.973 598.949 595.973 c
631.965 595.973 655.023 573.355 657.902 544.566 c
661.656 507.035 652.809 493.156 639.035 493.156 c
625.266 493.156 616.422 507.035 620.172 544.566 c
S
25 w
0 J
/DeviceGray {} CS
[1] SC
620.172 544.566 m
623.051 573.355 646.113 595.973 679.125 595.973 c
S
7.56 w
1 J
/DeviceGray {} CS
[0] SC
620.172 544.566 m
623.051 573.355 646.113 595.973 679.125 595.973 c
712.137 595.973 735.199 573.355 738.078 544.566 c
741.828 507.035 732.984 493.156 719.211 493.156 c
705.441 493.156 696.594 507.035 700.348 544.566 c
S
25 w
0 J
/DeviceGray {} CS
[1] SC
700.348 544.566 m
703.227 573.355 726.285 595.973 759.301 595.973 c
S
7.56 w
1 J
/DeviceGray {} CS
[0] SC
700.348 544.566 m
703.227 573.355 726.285 595.973 759.301 595.973 c
792.312 595.973 815.371 573.355 818.25 544.566 c
822.004 507.035 813.156 493.156 799.387 493.156 c
785.613 493.156 776.77 507.035 780.523 544.566 c
S
25 w
0 J
/DeviceGray {} CS
[1] SC
780.523 544.566 m
783.402 573.355 806.461 595.973 839.473 595.973 c
S
7.56 w
1 J
/DeviceGray {} CS
[0] SC
780.523 544.566 m
783.402 573.355 806.461 595.973 839.473 595.973 c
872.488 595.973 895.547 573.355 898.426 544.566 c
902.18 507.035 893.332 493.156 879.562 493.156 c
865.789 493.156 856.945 507.035 860.695 544.566 c
S
25 w
0 J
/DeviceGray {} CS
[1] SC
860.695 544.566 m
863.574 573.355 886.637 595.973 919.648 595.973 c
S
7.56 w
1 J
/DeviceGray {} CS
[0] SC
860.695 544.566 m
863.574 573.355 886.637 595.973 919.648 595.973 c
952.66 595.973 975.723 573.355 978.602 544.566 c
982.352 507.035 973.508 493.156 959.734 493.156 c
945.965 493.156 937.117 507.035 940.871 544.566 c
S
25 w
0 J
/DeviceGray {} CS
[1] SC
940.871 544.566 m
943.75 573.355 966.809 595.973 999.824 595.973 c
S
7.56 w
1 J
/DeviceGray {} CS
[0] SC
940.871 544.566 m
943.75 573.355 966.809 595.973 999.824 595.973 c
1032.84 595.973 1055.9 573.355 1058.78 544.566 c
1062.53 507.035 1053.68 493.156 1039.91 493.156 c
1026.14 493.156 1017.3 507.035 1021.05 544.566 c
S
25 w
0 J
/DeviceGray {} CS
[1] SC
1021.05 544.566 m
1023.93 573.355 1046.99 595.973 1080 595.973 c
S
7.56 w
1 J
/DeviceGray {} CS
[0] SC
1021.05 544.566 m
1023.93 573.355 1046.99 595.973 1080 595.973 c
1113.01 595.973 1136.07 573.355 1138.95 544.566 c
1142.7 507.035 1133.86 493.156 1120.09 493.156 c
1106.32 493.156 1097.47 507.035 1101.22 544.566 c
S
25 w
0 J
/DeviceGray {} CS
[1] SC
1101.22 544.566 m
1104.1 573.355 1127.16 595.973 1160.17 595.973 c
S
7.56 w
1 J
/DeviceGray {} CS
[0] SC
1101.22 544.566 m
1104.1 573.355 1127.16 595.973 1160.17 595.973 c
1193.19 595.973 1216.25 573.355 1219.13 544.566 c
1222.88 507.035 1214.03 493.156 1200.26 493.156 c
1186.49 493.156 1177.64 507.035 1181.4 544.566 c
S
25 w
0 J
/DeviceGray {} CS
[1] SC
1181.4 544.566 m
1184.28 573.355 1207.34 595.973 1240.35 595.973 c
S
7.56 w
1 J
/DeviceGray {} CS
[0] SC
1181.4 544.566 m
1184.28 573.355 1207.34 595.973 1240.35 595.973 c
1273.36 595.973 1296.42 573.355 1299.3 544.566 c
1303.05 507.035 1294.21 493.156 1280.44 493.156 c
1266.67 493.156 1257.82 507.035 1261.57 544.566 c
S
25 w
0 J
/DeviceGray {} CS
[1] SC
1261.57 544.566 m
1264.45 573.355 1287.51 595.973 1320.52 595.973 c
S
7.56 w
1 J
/DeviceGray {} CS
[0] SC
1261.57 544.566 m
1264.45 573.355 1287.51 595.973 1320.52 595.973 c
1353.54 595.973 1376.6 573.355 1379.48 544.566 c
1383.23 507.035 1374.38 493.156 1360.61 493.156 c
1346.84 493.156 1337.99 507.035 1341.75 544.566 c
S
25 w
0 J
/DeviceGray {} CS
[1] SC
1341.75 544.566 m
1344.63 573.355 1367.69 595.973 1400.7 595.973 c
S
7.56 w
1 J
/DeviceGray {} CS
[0] SC
1341.75 544.566 m
1344.63 573.355 1367.69 595.973 1400.7 595.973 c
1433.71 595.973 1456.77 573.355 1459.65 544.566 c
1463.4 507.035 1454.56 493.156 1440.79 493.156 c
1427.01 493.156 1418.17 507.035 1421.92 544.566 c
S
25 w
0 J
/DeviceGray {} CS
[1] SC
1421.92 544.566 m
1424.8 573.355 1447.86 595.973 1480.87 595.973 c
S
7.56 w
1 J
/DeviceGray {} CS
[0] SC
1421.92 544.566 m
1424.8 573.355 1447.86 595.973 1480.87 595.973 c
1513.89 595.973 1536.95 573.355 1539.83 544.566 c
1543.58 507.035 1534.73 493.156 1520.96 493.156 c
1507.19 493.156 1498.34 507.035 1502.1 544.566 c
S
25 w
0 J
/DeviceGray {} CS
[1] SC
1502.1 544.566 m
1504.97 573.355 1528.03 595.973 1561.05 595.973 c
S
7.56 w
1 J
/DeviceGray {} CS
[0] SC
1502.1 544.566 m
1504.97 573.355 1528.03 595.973 1561.05 595.973 c
1594.06 595.973 1617.12 573.355 1620 544.566 c
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 172.8 86.8563] Tm
0 0 Td
/F8_0 21.6 Tf
(t) 6.0048 Tj
-64.8 -64.7996 Td
(g) 10.8 Tj
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
